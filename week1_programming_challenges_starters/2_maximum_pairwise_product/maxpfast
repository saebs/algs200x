package main

import (
	"fmt"
	"math/rand"
)

// Maxpairwisefast

func MaxPairwiseProductFast(dataset []int) int {
	index1 := 0
	var index2 int
	n := len(dataset)
	for i := 1; i < n; i++ {
		if dataset[i] > dataset[index1] {
			index1 = i
		}
	}
	if index1 == 0 {
		index2 = 1
	} else {
		index2 = 0
	}

	for i := 0; i < n; i++ {
		if dataset[i] != dataset[index1] && dataset[i] > dataset[index2] {
			index2 = i
		}
	}
	return dataset[index1] * dataset[index2]

}

// dataset creator
func DatasetWrite(n, m int) []int {
	dataset := make([]int, n)
	for i := 0; i < n; i++ {
		dataset[i] = rand.Intn(m + 1)
	}
	//	fmt.Println(dataset)
	return dataset
}

func main() {
	var n int
	var m int
	fmt.Scanf("%d", &n)
	fmt.Scanf("%d", &m)
	//dATA := DatasetWrite(n, m)
	//var dat = []int{100000, 90000}
	dat := oneTo200k()
	fmt.Println(MaxPairwiseProductFast(dat))

}

func oneTo200k() []int {
	dat := make([]int, 200000)
	n := 1
	for i := 0; i < 200000; i++ {
		dat[i] = n
		n += 1
	}
	return dat
}
